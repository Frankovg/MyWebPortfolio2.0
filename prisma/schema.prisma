generator client {
  provider = "prisma-client-js"
}

// for development, use sqlite
// datasource db {
//   provider = "sqlite"
//   url      = env("DATABASE_URL")
// }

// for production, use postgres
datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Project {
  id               String    @id @default(cuid())
  title            String
  shortDescription String
  description      String
  image            String
  slug             String    @unique
  gallery          Gallery[]
  date             DateTime  @default(now())
  repository       String?
  websiteUrl       String?
  videoUrl         String?
  videoTitle       String?
  videoDescription String?
  company          String?
  companyUrl       String?
  client           String?
  clientUrl        String?
  techStack        Tech[]
  category         Category  @relation(fields: [categoryId], references: [id])
  categoryId       String
  roles            Role[]
  updatedAt        DateTime  @updatedAt
  createdAt        DateTime  @default(now())
  published        Boolean   @default(true)
}

model Tech {
  id       String    @id @default(cuid())
  name     String    @unique
  value    String    @unique
  projects Project[]
}

model Category {
  id       String    @id @default(cuid())
  name     String
  value    String    @unique
  projects Project[]
}

model Gallery {
  id          String  @id @default(cuid())
  imageUrl    String
  alt         String
  description String?
  projectId   String
  project     Project @relation(fields: [projectId], references: [id])
}

model Role {
  id         String  @id @default(cuid())
  label      String
  value      String
  percentage Int
  projectId  String
  project    Project @relation(fields: [projectId], references: [id])
}

model User {
  id             String   @id @default(cuid())
  email          String   @unique
  hashedpassword String
  isAdmin        Boolean  @default(false)
  isActive       Boolean  @default(true)
  updatedAt      DateTime @updatedAt
  createdAt      DateTime @default(now())
}

model Download {
  id          String   @id @default(cuid())
  imageUrl    String
  alt         String
  name        String
  description String
  language    String
  fileHref    String
  format      String
  isActive    Boolean  @default(false)
  updatedAt   DateTime @updatedAt
  createdAt   DateTime @default(now())
}
